"use server";

import { cookies } from "next/headers";
import { Playlist } from "./app/playlist-recommendation/page";

export async function setAuthCookies(
  accessToken: string,
  refreshToken: string
) {
  const cookieStore = await cookies();
  cookieStore.set("spotify_access_token", accessToken);
  cookieStore.set("spotify_refresh_token", refreshToken);
  return;
}

export async function savePlaylistToAccount(
  mood: string,
  playlist: Playlist[]
) {
  const cookieStore = await cookies();
  let auth = cookieStore.get("spotify_access_token");
  if (!auth) throw { message: "You need to login first" };
  console.log(auth, "masuk sini <<<<<<<<<");
  try {
    //     curl --request POST \
    //   --url https://api.spotify.com/v1/users/smedjan/playlists \
    //   --header 'Authorization: Bearer 1POdFZRZbvb...qqillRxMr2z' \
    //   --header 'Content-Type: application/json' \
    //   --data '{
    //     "name": "New Playlist",
    //     "description": "New playlist description",
    //     "public": false
    // }'
    let res = await fetch(`https://api.spotify.com/v1/me/playlists`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + auth?.value,
      },
      body: JSON.stringify({
        name: mood,
        description: `Your ${mood} playlistâ€”generated by Wear The Vibe`,
        public: true,
      }),
    });

    if (!res.ok) throw await res.json();
    let data = await res.json();
    console.log(data, "<<<< data from actions page");
    let details = {
      spotify_url: data.external_urls.spotify,
      id: data.id,
    };

    await addItemsToPlaylist(details, auth.value, playlist);

    return data.external_urls.spotify;
  } catch (error) {
    throw error;
  }
}

export async function addItemsToPlaylist(
  detail: { spotify_url: string; id: string },
  auth: string,
  playlist: Playlist[]
) {
  const { spotify_url, id } = detail;
  try {
    const uriCollection = playlist.map((el) => {
      return el.uri;
    });
    let res = await fetch(`https://api.spotify.com/v1/playlists/${id}/tracks`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + auth,
      },
      body: JSON.stringify({
        uris: uriCollection,
      }),
    });
    if (!res.ok) throw await res.json();

    return;
  } catch (error) {
    throw error;
  }
}
